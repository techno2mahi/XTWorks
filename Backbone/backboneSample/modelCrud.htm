<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Backbone Sample Application</title>
    <script src="libs/jquery-1.9.1.js" type="text/javascript"></script>
    <script src="libs/underscore.js" type="text/javascript"></script>
    <script src="libs/json2.js" type="text/javascript"></script>
    <script src="libs/backbone.js" type="text/javascript"></script>
    <script src="js/model.js" type="text/javascript"></script>
</head>
<body>
    <div class="main">
        <script type="text/javascript">
            function testCreate() {
                // Lets perform a create operation [CREATE]
                var book = new Book({ BookName: "Backbone Book 49" });
                book.save({}, {
                    type: "POST",
                    success: function (model, respose, options) {
                        console.log("The model has been saved to the server");
                    },
                    error: function (model, xhr, options) {
                        console.log("Something went wrong while saving the model");
                    }
                });
            }

            function testRead() {
                // Now let us try to retrieve a book [READ]
                var book1 = new Book({ ID: 46 });
                book1.fetch({
                    success: function (bookResponse) {
                        console.log("Found the book: " + bookResponse.get("BookName"));
                    }
                });
            }

            function testDelete() {
                // Let us delete the model with id 13 [DELETE]
                var book2 = new Book({ ID: 46 });
                book2.destroy({
                    success: function (model, respose, options) {
                        console.log("The model has deleted the server");
                        alert("Success: The model has deleted the server ")
                    },
                    error: function (model, xhr, options) {
                        console.log("Something went wrong while deleting the model");
                    }
                });
            }

            function testUpdate() {
                // Lets try to update a book [UPDATE]
                var book1 = new Book({ ID: 46 });
                book1.fetch({
                    success: function (bookResponse) {
                        console.log("Found the book: " + bookResponse.get("BookName"));

                        // Let us update this retreived book now (doing it in the callback) [UPDATE]
                        bookResponse.set("BookName", bookResponse.get("BookName") + "_updated");
                        bookResponse.save({}, {
                            success: function (model, respose, options) {
                                console.log("The model has been updated to the server");
                            },
                            error: function (model, xhr, options) {
                                console.log("Something went wrong while updating the model");
                            }
                        });
                    }
                });
            }

            //-------- Lets test the Ex version of model here

            function testCreateEx() {
                // Lets perform a create operation [CREATE]
                var book = new BookEx({ BookName: "Backbone Book 49" });
                book.save({}, {
                    type: "POST",
                    success: function (model, respose, options) {
                        console.log("The model has been saved to the server");
                    },
                    error: function (model, xhr, options) {
                        console.log("Something went wrong while saving the model");
                    }
                });
            }

            function testReadEx() {
                // Now let us try to retrieve a book [READ]
                var book1 = new BookEx({ ID: 46 });
                book1.fetch({
                    success: function (bookResponse) {
                        console.log("Found the book: " + bookResponse.get("BookName"));
                    }
                });
            }

            function testDeleteEx() {
                // Let us delete the model with id 13 [DELETE]
                var book2 = new BookEx({ ID: 45 });
                book2.destroy({
                    success: function (model, respose, options) {
                        console.log("The model has deleted the server");
                    },
                    error: function (model, xhr, options) {
                        console.log("Something went wrong while deleting the model");
                    }
                });
            }

            function testUpdateEx() {
                // Lets try to update a book [UPDATE]
                var book1 = new BookEx({ ID: 46 });
                book1.fetch({
                    success: function (bookResponse) {
                        console.log("Found the book: " + bookResponse.get("BookName"));

                        // Let us update this retreived book now (doing it in the callback) [UPDATE]
                        bookResponse.set("BookName", bookResponse.get("BookName") + "_updated");
                        bookResponse.save({}, {
                            success: function (model, respose, options) {
                                console.log("The model has been updated to the server");
                            },
                            error: function (model, xhr, options) {
                                console.log("Something went wrong while updating the model");
                            }
                        });
                    }
                });
            }

        </script>
        <input id="Button1" type="button" value="Test Create" onclick="testCreate();" />
        <input id="Button2" type="button" value="Test Read" onclick="testRead();" />
        <input id="Button3" type="button" value="Test Update" onclick="testUpdate();" />
        <input id="Button4" type="button" value="Test Delete" onclick="testDelete();" />
        <br />
        <hr />
        <br />
        <input id="Button5" type="button" value="Test Create" onclick="testCreateEx();" />
        <input id="Button6" type="button" value="Test Read" onclick="testReadEx();" />
        <input id="Button7" type="button" value="Test Update" onclick="testUpdateEx();" />
        <input id="Button8" type="button" value="Test Delete" onclick="testDeleteEx();" />
    </div>
</body>
</html>
